---
- name: audit.rules
  block:
    - name: Delete audit.rules file
      ansible.builtin.file:
        path: "{{ audit_rules_path }}"
        state: absent
      failed_when: false

    - name: Generate rules for SUID and SGID files
      ansible.builtin.shell: >
        find / -xdev \( -perm -4000 -o -perm -2000 \) -type f
        | awk '{print "-a always,exit -F path=" $1 " -F perm=x -F auid>=1000
        -F auid!=4294967295 -k privileged" }'
      register: rules_out

    - name: Create audit.rules file
      vars:
        rules:
          "x86_64": "{{ rules_b64 }}"
          "x86": "{{ rules_b32 }}"
      ansible.builtin.blockinfile:
        create: true
        path: "{{ audit_rules_path }}"
        block: |
          {{ rules[arch] }}
          {{ rules_out.stdout }}

    - name: Restart service
      vars:
        indicator: "Stopping logging: [  OK  ]"
      ansible.builtin.command: "service auditd restart"
      register: out
      until: indicator in out.stdout_lines[0]
      retries: 5
      delay: 5

  rescue:
    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

    - name: Caught error
      ansible.builtin.debug:
        msg: Troubleshoot me
