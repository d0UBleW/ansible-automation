---
- name: Splunk
  block:
    - name: Check if splunk is installed
      ansible.builtin.expect:
        command: "{{ splunk_bin }} -version --accept-license"
        responses: "{{ splunk_responses }}"
      register: check_splunk_out
      failed_when: check_splunk_out is failed or check_splunk_out.rc != 0
      changed_when: false
      ignore_errors: true

    - name: Install splunk
      when: check_splunk_out is failed
      block:
        - name: Extract tgz file
          ansible.builtin.unarchive:
            src: "{{ splunk_tgz }}"
            dest: "{{ splunk_base_dir }}/"
            list_files: true
          register: tgz_out

        - name: Rename folder to splunkforwarder
          vars:
          ansible.builtin.command: >
            mv {{ splunk_base_dir }}/{{ tgz_out.files[0] }}
            {{ splunk_base_dir }}/splunkforwarder/
          register: out
          when: tgz_out.files[0] != "splunkforwarder/"
          changed_when: true

      rescue:
        - name: Flushing all handlers
          ansible.builtin.meta: flush_handlers

        - name: Caught error
          ansible.builtin.debug:
            msg: "Troubleshoot me"

    - name: Test and configure splunk to start on boot
      block:
        - name: "Create account {{ splunk_username + ':' + splunk_password }}"
          ansible.builtin.expect:
            command: "{{ splunk_bin }} --accept-license -version"
            responses: "{{ splunk_responses }}"
          register: create_splunk_out
          changed_when:
            - '"This appears to be your first time" in create_splunk_out.stdout'

        - name: Stop splunk to allow enable boot-start
          ansible.builtin.command: "{{ splunk_bin }} stop"
          register: stop_splunk_out
          changed_when: '"splunkd is not running" not in stop_splunk_out.stdout'

        - name: Enable splunk to start on boot
          vars:
            user: root
            changed_indicator: "Configured as systemd managed service"
          ansible.builtin.command: >
            {{ splunk_bin }} enable boot-start -user {{ user }}
          register: enable_splunk_out
          changed_when:
            - changed_indicator in enable_splunk_out.stdout
          failed_when:
            - enable_splunk_out.rc != 0
            - '"exists" not in enable_splunk_out.stderr'

        - name: Start splunk
          vars:
            indicator: "The splunk daemon (splunkd) is already running"
          ansible.builtin.command: "{{ splunk_bin }} start"
          register: start_splunk_out
          changed_when:
            - indicator not in start_splunk_out.stdout

        - name: Set deploy poll 172.31.186.2:8089
          ansible.builtin.expect:
            command: "{{ splunk_bin }} set deploy-poll 172.31.186.2:8089"
            responses:
              "Splunk username": "{{ splunk_username }}"
              "Password": "{{ splunk_password }}"
          register: poll_out
          changed_when: '"Configuration updated" in poll_out.stdout'
          failed_when: '"Configuration updated" not in poll_out.stdout'

        - name: Verify splunk status
          ansible.builtin.command: "{{ splunk_bin }} status"
          register: start_splunk_out
          failed_when:
            - '"splunkd is running" not in start_splunk_out.stdout'
            - '"splunk helpers are running" not in start_splunk_out.stdout'
          changed_when: false
          until: start_splunk_out is not failed
          retries: 5
          delay: 5

      rescue:
        - name: Flushing all handlers
          ansible.builtin.meta: flush_handlers

        - name: Caught error
          ansible.builtin.debug:
            msg: "Troubleshoot me"

  rescue:
    - name: Flushing all handlers
      ansible.builtin.meta: flush_handlers

    - name: Caught error
      ansible.builtin.debug:
        msg: "Troubleshoot me"
